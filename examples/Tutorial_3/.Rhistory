ggtree(tree, mrsd=as.Date("16/04/2019", format = "%d/%m/%Y")) +
scale_fill_manual(values = c('slateblue')) +
theme_tree2()
ggtree(tree, mrsd=as.Date("16/04/2019", format = "%d/%m/%Y"), aes(color = 'slateblue')) +
theme_tree2()
ggtree(tree, mrsd=as.Date("16/04/2019", format = "%d/%m/%Y"), color = 'slateblue') +
theme_tree2()
tree <- read.tree("/Users/ciarajudge/Desktop/PhD/YFV_Brazil_Rt/Data/test2.tre")
plot(tree)
tree$tip.label
labels <- tree$tip.label
labels <- labels[grepl("\\|SP\\|", labels)]
labels <- labels[grepl("\\|NP\\|", labels)]
subsettedtree <- keep.tip(tree, labels)
info <- str_replace_all(str_remove_all(subsettedtree$tip.label, "'"), "\\|", ",")
subsettedtree$tip.label <- str_remove_all(subsettedtree$tip.label, "'")
ggtree(subsettedtree, mrsd=as.Date("16/04/2019", format = "%d/%m/%Y")) +
geom_nodelab()+
geom_tiplab()+
theme_tree2()
node.height(subsettedtree)
distances <- get_all_distances_to_root(subsettedtree)
node_distances <- distances[(length(subsettedtree$tip.label)+1):(length(subsettedtree$tip.label)+subsettedtree$Nnode)]
tip_distances <- distances[1:length(subsettedtree$tip.label)]
library(ape)
library(ggtree)
library(tidyverse)
distances <- get_all_distances_to_root(subsettedtree)
library(castor)
distances <- get_all_distances_to_root(subsettedtree)
node_distances <- distances[(length(subsettedtree$tip.label)+1):(length(subsettedtree$tip.label)+subsettedtree$Nnode)]
tip_distances <- distances[1:length(subsettedtree$tip.label)]
hist(tip_distances)
birthtimes <- node_distances * 365
sampletimes <- tip_distances * 365
treebreakdown = data.frame(Date, Births, Samplings)
treebreakdown = data.frame()
colnames(treebreakdown) <- c(Date, Births, Samplings)
colnames(treebreakdown) <- c('Date', 'Births', 'Samplings')
treebreakdown = data.frame(matrix(ncol = 3, nrow = 0))
colnames(treebreakdown) <- c('Date', 'Births', 'Samplings')
i = 1
b <- sum(birthtimes>=i-1 & birthtimes < i)
s <- sum(sampletimes>=i-1 & sampletimes < i)
treebreakdown = data.frame(matrix(ncol = 3, nrow = 0))
colnames(treebreakdown) <- c('Date', 'Event', 'Number')
for (i in 1:round(max(sampletimes))) {
vec <- c()
vec[1] <- as.Date("2016-05-07", format = "%Y-%m-%d") + i
vec[2] <- 'Births'
vec[3] <- sum(birthtimes>=i-1 & birthtimes < i)
treebreakdown <- rbind(treebreakdown, vec)
vec[2] <- 'Samplings'
vec[3] <- sum(sampletimes>=i-1 & sampletimes < i)
treebreakdown <- rbind(treebreakdown, vec)
}
View(treebreakdown)
colnames(treebreakdown) <- c('Date', 'Event', 'Number')
treebreakdown = data.frame(matrix(ncol = 3, nrow = 0))
colnames(treebreakdown) <- c('Date', 'Event', 'Number')
treebreakdown$Date <- as.Date()
treebreakdownb = data.frame(matrix(ncol = 3, nrow = round(max(sampletimes))))
colnames(treebreakdown) <- c('Date', 'Event', 'Number')
treebreakdownb = data.frame(matrix(ncol = 3, nrow = round(max(sampletimes))))
for (i in 1:round(max(sampletimes))) {
treebreakdownb[i,1] <- as.Date("2016-05-07", format = "%Y-%m-%d") + i
treebreakdownb[i,2] <- 'Births'
treebreakdownb[i,3] <- sum(birthtimes>=i-1 & birthtimes < i)
}
View(treebreakdownb)
treebreakdownb = data.frame(matrix(ncol = 3, nrow = round(max(sampletimes))))
View(treebreakdownb)
for (i in 1:round(max(sampletimes))) {
treebreakdownb[i,1] <- as.Date("2016-05-07", format = "%Y-%m-%d") + i
treebreakdownb[i,2] <- 'Births'
treebreakdownb[i,3] <- sum(birthtimes>=i-1 & birthtimes < i)
}
View(treebreakdownb)
treebreakdownb$X1 <- as.Date(treebreakdownb$X1)
View(treebreakdownb)
treebreakdown = data.frame(matrix(ncol = 3, nrow = 0))
colnames(treebreakdown) <- c('Date', 'Event', 'Number')
for (i in 1:round(max(sampletimes))) {
vec <- c()
vec[1] <- as.Date("2016-05-07", format = "%Y-%m-%d") + i
vec[2] <- 'Births'
vec[3] <- sum(birthtimes>=i-1 & birthtimes < i)
treebreakdown <- rbind(treebreakdown, vec)
vec[2] <- 'Samplings'
vec[3] <- sum(sampletimes>=i-1 & sampletimes < i)
treebreakdown <- rbind(treebreakdown, vec)
}
colnames(treebreakdown) <- c('Date', 'Event', 'Number')
View(treebreakdown)
View(treebreakdown)
treebreakdown$Date <- as.Date(treebreakdown$Date)
View(treebreakdown)
treebreakdown$Date <- as.Date(as.integer(treebreakdown$Date))
View(treebreakdown)
ggplot(treebreakdown, aes(x = Date)) +
geom_bar(aes(y = Number, fill = Event), position = "stack", stat = "identity")
View(treebreakdown)
ggplot(treebreakdown) +
geom_bar(aes(y = Number, fill = Event), position = "stack", stat = "identity")
ggplot(treebreakdown) +
geom_bar(aes(x = Number, fill = Event), position = "stack", stat = "identity")
ggplot(treebreakdown) +
geom_bar(aes(x = Number, y = Date, fill = Event), position = "stack", stat = "identity")
ggplot(treebreakdown) +
geom_bar(aes(y = Number, x = Date, fill = Event), position = "stack", stat = "identity")
ggplot(treebreakdown) +
geom_bar(aes(y = Number, x = Date, fill = Event),stat = "identity")
treebreakdown$Number <- as.integer(treebreakdown$Number)
ggplot(treebreakdown) +
geom_bar(aes(y = Number, x = Date, fill = Event), stat = "identity")
ggplot(treebreakdown) +
geom_bar(aes(y = Number, x = Date, fill = Event, col = Event), stat = "identity")
ggplot(treebreakdown) +
geom_bar(aes(y = Number, x = Date, fill = Event, col = Event), stat = "identity", show.legend = T)
ggplot(treebreakdown, aes(x = Date)) +
geom_bar(aes(y = Number, fill = Event, col = Event), stat = "identity", show.legend = T)
ggplot(treebreakdown, aes(x = Date)) +
geom_bar(aes(y = Number, fill = Event, col = Event), stat = "identity", show.legend = TRUE)
treebreakdownspare <- treebreakdown %>%
pivot_wider(names_from = Event, values_from = Number)
View(treebreakdownspare)
for (i in 2:nrow(treebreakdownspare)) {
lineages <- append(lineages, (lineages[i-1] + treebreakdownspare[i,2] - treebreakdownspare[i,3]))
}
lineages <- c(2)
for (i in 2:nrow(treebreakdownspare)) {
lineages <- append(lineages, (lineages[i-1] + treebreakdownspare[i,2] - treebreakdownspare[i,3]))
}
lineages
lineages <- unlist(lineages)
treebreakdownspare <- treebreakdownspare %>%
mutate(Lineages = lineages)
ggplot(treebreakdownspare, aes(x = Date, y = Lineages)) +
geom_line()
trajectories_separate <- loadtrajectoriesminusburninseparate(outputfolder, burn_in)
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
plottrajectoriesfromtable(trajectories, 'slateblue')
outputfolder <- "AAAGX/"
source("/Users/ciarajudge/Desktop/PhD/EpiFusion/EpiFusion_utilities.R")
plotlikelihoodtrace(outputfolder)
burn_in <- 0.2
trajectories <- loadtrajectoriesminusburnin(outputfolder, burn_in)
unlist(trajectories[1,])
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
plottrajectoriesfromtable(trajectories, 'slateblue')
plotrtposteriors_betagamma(outputfolder, burn_in, 'pink')
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date')
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = select(trajectories))
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything())
View(trajectorieslong)
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(Value),
lower95 = mean_Value - qt(1- alpha/2, (n() - 1))*sd(Value)/sqrt(n()),
upper95 = mean_Value + qt(1- alpha/2, (n() - 1))*sd(Value)/sqrt(n()))
View(trajectorieslong)
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - qt(1- alpha/2, (n() - 1))*sd(value)/sqrt(n()),
upper95 = Mean + qt(1- alpha/2, (n() - 1))*sd(value)/sqrt(n()))
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n()))
View(trajectorieslong)
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = str_remove('T_', Date)) %>%
arrange(Date) %>%
mutate(Date = as.Date("2016-05-07", format = "%Y-%m-%d") + Date)
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = as.integer(str_remove('T_', Date))) %>%
arrange(Date) %>%
mutate(Date = as.Date("2016-05-07", format = "%Y-%m-%d") + Date)
View(trajectorieslong)
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = as.integer(str_remove('T_', Date)))
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = str_remove('T_', Date))
View(trajectorieslong)
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct()
View(trajectorieslong)
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = str_remove("^T_", Date))
View(trajectorieslong)
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct()
str_remove("^T_", trajectorieslong$Date)
str_remove("T_", trajectorieslong$Date)
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = as.integer(str_remove(Date, "T_"))) %>%
arrange(Date) %>%
mutate(Date = as.Date("2016-05-07", format = "%Y-%m-%d") + Date)
View(trajectorieslong)
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = as.integer(str_remove(Date, "T_"))) %>%
arrange(Date) %>%
mutate(Date = as.Date("2016-05-07", format = "%Y-%m-%d") + Date)
ggplot(trajectorieslong, aes(x = Date)) +
geom_ribbon(aes(ymin = lower95, ymax = upper95), fill = 'orange') +
geom_line(aes(y = Mean), col = 'orangered3')
outputfolder <- "AAAHA/"
source("/Users/ciarajudge/Desktop/PhD/EpiFusion/EpiFusion_utilities.R")
plotlikelihoodtrace(outputfolder)
trajectories <- loadtrajectoriesminusburnin(outputfolder, burn_in)
unlist(trajectories[1,])
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
plottrajectoriesfromtable(trajectories, 'slateblue')
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = as.integer(str_remove(Date, "T_"))) %>%
arrange(Date) %>%
mutate(Date = as.Date("2016-05-07", format = "%Y-%m-%d") + Date)
ggplot(trajectorieslong, aes(x = Date)) +
geom_ribbon(aes(ymin = lower95, ymax = upper95), fill = 'orange') +
geom_line(aes(y = Mean), col = 'orangered3')
plotrtposteriors_betagamma(outputfolder, burn_in, 'pink')
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - 1.96*sd(value)/sqrt(n()),
upper95 = Mean + 1.96*sd(value)/sqrt(n())) %>%
distinct() %>%
mutate(Date = as.integer(str_remove(Date, "T_"))) %>%
arrange(Date) %>%
mutate(Date = as.Date("2016-05-07", format = "%Y-%m-%d") + Date)
ggplot(trajectorieslong, aes(x = Date)) +
geom_ribbon(aes(ymin = lower95, ymax = upper95), fill = 'slateblue') +
geom_line(aes(y = Mean), col = 'slateblue4')
outputfolder <- "AAAGX/"
source("/Users/ciarajudge/Desktop/PhD/EpiFusion/EpiFusion_utilities.R")
trajectories2 <- loadtrajectoriesminusburnin(outputfolder, burn_in)
unlist(trajectories[1,])
plottrajectoriesfromtable <- function(trajectories, colour = 'darkolivegreen4') {
hpds <- HDInterval::hdi(trajectories, 0.95)
xmax <- max(hpds)
means <- colMeans(trajectories, na.rm = T)
#plot(1:length(hpds[1,]), means, type = 'l', col = colour, ylim = c(0, xmax),
#    main = 'Infection Trajectories', ylab = 'Number Infected', xlab = 'Time (days)')
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
hpds <- HDInterval::hdi(trajectories, 0.8)
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
hpds <- HDInterval::hdi(trajectories, 0.66)
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
lines( means, lwd = 1.5, col = colour)
}
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
plottrajectoriesfromtable(trajectories2, 'darkorange2')
plottrajectoriesfromtable2 <- function(trajectories, colour = 'darkolivegreen4') {
hpds <- HDInterval::hdi(trajectories, 0.95)
xmax <- max(hpds)
means <- colMeans(trajectories, na.rm = T)
#plot(1:length(hpds[1,]), means, type = 'l', col = colour, ylim = c(0, xmax),
#    main = 'Infection Trajectories', ylab = 'Number Infected', xlab = 'Time (days)')
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
hpds <- HDInterval::hdi(trajectories, 0.8)
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
hpds <- HDInterval::hdi(trajectories, 0.66)
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
lines( means, lwd = 1.5, col = colour)
}
plottrajectoriesfromtable <- function(trajectories, colour = 'darkolivegreen4') {
hpds <- HDInterval::hdi(trajectories, 0.95)
xmax <- max(hpds)
means <- colMeans(trajectories, na.rm = T)
plot(1:length(hpds[1,]), means, type = 'l', col = colour, ylim = c(0, xmax),
main = 'Infection Trajectories', ylab = 'Number Infected', xlab = 'Time (days)')
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
hpds <- HDInterval::hdi(trajectories, 0.8)
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
hpds <- HDInterval::hdi(trajectories, 0.66)
polygon(c(1:length(hpds[1,]), rev(1:length(hpds[1,]))), c(hpds[1,], rev(hpds[2,])), col = adjustcolor(colour, alpha.f = 0.2), border = F)
lines( means, lwd = 1.5, col = colour)
}
for (i in 1:ncol(trajectories2)) {
trajectories2[,i] <- as.numeric(trajectories2[,i])
}
plottrajectoriesfromtable(trajectories2, 'darkorange2')
plottrajectoriesfromtable2(trajectories, 'slateblue')
plottrajectoriesfromtable(trajectories2, 'darkorange2')
plottrajectoriesfromtable2(trajectories, 'slateblue')
outputfolder <- "AAAHC/"
source("/Users/ciarajudge/Desktop/PhD/EpiFusion/EpiFusion_utilities.R")
plotlikelihoodtrace(outputfolder)
plotlikelihoodtrace(outputfolder)
burn_in <- 0.2
trajectories <- loadtrajectoriesminusburnin(outputfolder, burn_in)
unlist(trajectories[1,])
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
plottrajectoriesfromtable(trajectories, 'darkolivegreen')
plotrtposteriors_betagamma(outputfolder, burn_in, 'pink')
for (i in 1:ncol(trajectories)) {
trajectories[,i] <- as.numeric(trajectories[,i])
}
trajectorieslong <- trajectories %>%
pivot_longer(names_to = 'Date', cols = everything()) %>%
group_by(Date) %>%
summarise(Mean = mean(value),
lower95 = Mean - (1.96*sd(value)/sqrt(n())),
upper95 = Mean + (1.96*sd(value)/sqrt(n())))%>%
distinct() %>%
mutate(Date = as.integer(str_remove(Date, "T_"))) %>%
arrange(Date) %>%
mutate(Date = as.Date("2016-05-07", format = "%Y-%m-%d") + Date)
ggplot(trajectorieslong, aes(x = Date)) +
geom_ribbon(aes(ymin = lower95, ymax = upper95), fill = 'slateblue') +
geom_line(aes(y = Mean), col = 'slateblue4')
setwd("/Users/ciarajudge/Desktop/PhD/EpiFusion/examples/Tutorial_3/")
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(stringr)
raw_tree <- read.nexus("Makona_1610_cds_ig.MCC.tree")
#Turn tree labels into metadata table
alllabels <- raw_tree$tip.label
sequence_metadata <- data.frame(matrix(0, ncol = 7, nrow = length(alllabels)))
for (i in 1:length(alllabels)) {
label <- str_remove_all(alllabels[i], "'")
row <- c(label, unlist(str_split(label, "\\|")))
sequence_metadata[i,] <- row
}
colnames(sequence_metadata) <- c("tip", "Pathogen", "ID", "Accession", "Country", "Region", "Date")
raw_tree$tip.label <- str_remove_all(raw_tree$tip.label, "'")
library(ggtree)
colourednational <- ggtree(raw_tree) %<+% sequence_metadata +
geom_tippoint(aes(color = Country)) +
theme_tree2()
colourednational
raw_tree$node.label <- seq(1, raw_tree$Nnode)
ggtree(raw_tree) %<+% sequence_metadata +
geom_tippoint(aes(color = Country)) +
geom_nodelab(size = 3) +
theme_tree2()
highlightedclade <- ggtree(raw_tree) %<+% sequence_metadata +
geom_hilight(node = "219", fill = "yellow", alpha = 0.2, type = "rect") +
geom_tippoint(aes(color = Country)) +
theme_tree2()
highlightedclade
subset_sle_tree <- extract.clade(raw_tree, "219", root.edge = T)
sierra_leone_sequence_metadata <- sequence_metadata %>%
dplyr::filter(tip %in% subset_sle_tree$tip.label) %>%
dplyr::filter(Country == "SLE")
subset_sle_tree <- keep.tip(subset_sle_tree, sierra_leone_sequence_metadata$tip)
ggtree(subset_sle_tree, mrsd = max(sierra_leone_sequence_metadata$Date)) %<+% sierra_leone_sequence_metadata +
geom_tippoint() +
theme_tree2()
subset_sle_tree$root.edge
fulltreelength <- (365*(max(nodeHeights(subset_sle_tree)) + subset_sle_tree$root.edge))
SLE_epifusion_tree <- subset_sle_tree
distances <- get_all_distances_to_root(SLE_epifusion_tree) + rnorm(length(get_all_distances_to_root(SLE_epifusion_tree)), 0.0001, 0.0001)
library(castor)
SLE_epifusion_tree <- subset_sle_tree
distances <- get_all_distances_to_root(SLE_epifusion_tree) + rnorm(length(get_all_distances_to_root(SLE_epifusion_tree)), 0.0001, 0.0001)
node_distances <- distances[(length(SLE_epifusion_tree$tip.label)+1):(length(SLE_epifusion_tree$tip.label)+SLE_epifusion_tree$Nnode)]
tip_distances <- distances[1:length(SLE_epifusion_tree$tip.label)]
SLE_epifusion_tree$node.label <- paste0("X[", (node_distances + subset_sle_tree$root.edge)*365, "]")
SLE_epifusion_tree$tip.label <- paste0("X[", (tip_distances + subset_sle_tree$root.edge)*365, "]")
library(castor)
SLE_epifusion_tree <- subset_sle_tree
distances <- get_all_distances_to_root(SLE_epifusion_tree) + rnorm(length(get_all_distances_to_root(SLE_epifusion_tree)), 0.0001, 0.0001)
node_distances <- distances[(length(SLE_epifusion_tree$tip.label)+1):(length(SLE_epifusion_tree$tip.label)+SLE_epifusion_tree$Nnode)]
tip_distances <- distances[1:length(SLE_epifusion_tree$tip.label)]
SLE_epifusion_tree$node.label <- paste0("X[", (node_distances + subset_sle_tree$root.edge)*365, "]")
SLE_epifusion_tree$tip.label <- paste0("X[", (tip_distances + subset_sle_tree$root.edge)*365, "]")
treestring <- write.tree(SLE_epifusion_tree)
start_date <- max(sierra_leone_sequence_metadata$Date) - (max(distances) + subset_sle_tree$root.edge)
(max(distances) + subset_sle_tree$root.edge)
max(sierra_leone_sequence_metadata$Date)
start_date <- as.Date(max(sierra_leone_sequence_metadata$Date)) - ((max(distances) + subset_sle_tree$root.edge)*365)
caselinelist <- read.csv("pnas.1518587113.sd02.csv") %>%
mutate(Date = as.Date(Date.of.symptom.onset, format = "%d-%b-%y")) %>%
filter(Date < max(sierra_leone_sequence_metadata$Date)) %>%
mutate(Week = ceiling(as.numeric(Date - start_date)/7)) %>%
group_by(Week) %>%
mutate(Cases = n()) %>%
dplyr::select(Week, Cases) %>%
distinct() %>%
ungroup()
library(tidyverse)
library(dplyr)
caselinelist <- read.csv("pnas.1518587113.sd02.csv") %>%
mutate(Date = as.Date(Date.of.symptom.onset, format = "%d-%b-%y")) %>%
filter(Date < max(sierra_leone_sequence_metadata$Date)) %>%
mutate(Week = ceiling(as.numeric(Date - start_date)/7)) %>%
group_by(Week) %>%
mutate(Cases = n()) %>%
dplyr::select(Week, Cases) %>%
distinct() %>%
ungroup()
ggplot(caselinelist, aes(x = Week, y = Cases)) +
geom_bar()
ggplot(caselinelist, aes(x = Week, y = Cases)) +
geom_bar(stat = "identity")
paste0(caselinelist$Cases, collapse = " ")
paste0(caselinelist$Week*7, collapse = " ")
library(EpiFusionUtilities)
